{
  "name": "Integration Webhooks",
  "flow": [
    {
      "id": 1,
      "module": "gateway:CustomWebHook",
      "version": 1,
      "parameters": {
        "hook": 487314,
        "maxResults": 1
      },
      "mapper": {},
      "metadata": {
        "designer": {
          "x": 0,
          "y": 750
        },
        "restore": {
          "parameters": {
            "hook": {
              "data": {
                "editable": "true"
              },
              "label": "knowledge_hook"
            }
          }
        },
        "parameters": [
          {
            "name": "hook",
            "type": "hook:gateway-webhook",
            "label": "Webhook",
            "required": true
          },
          {
            "name": "maxResults",
            "type": "number",
            "label": "Maximum number of results"
          }
        ],
        "interface": [
          {
            "name": "arguments",
            "spec": [
              {
                "name": "country",
                "type": "text"
              }
            ],
            "type": "collection"
          },
          {
            "name": "name",
            "type": "text"
          }
        ],
        "advanced": true
      }
    },
    {
      "id": 12,
      "module": "builtin:BasicRouter",
      "version": 1,
      "mapper": null,
      "metadata": {
        "designer": {
          "x": 300,
          "y": 750
        }
      },
      "routes": [
        {
          "flow": [
            {
              "id": 9,
              "module": "http:ActionSendData",
              "version": 3,
              "parameters": {
                "handleErrors": false,
                "useNewZLibDeCompress": true
              },
              "filter": {
                "name": "getCurrentPopulation",
                "conditions": [
                  [
                    {
                      "a": "{{1.name}}",
                      "b": "getCurrentPopulation",
                      "o": "text:equal"
                    }
                  ]
                ]
              },
              "mapper": {
                "ca": "",
                "qs": [],
                "url": "https://restcountries.com/v3.1/name/{{1.arguments.argument}}",
                "gzip": true,
                "method": "get",
                "headers": [],
                "timeout": "",
                "useMtls": false,
                "authPass": "",
                "authUser": "",
                "bodyType": "",
                "serializeUrl": false,
                "shareCookies": false,
                "parseResponse": true,
                "followRedirect": true,
                "useQuerystring": false,
                "followAllRedirects": false,
                "rejectUnauthorized": true
              },
              "metadata": {
                "designer": {
                  "x": 600,
                  "y": 150
                },
                "restore": {
                  "expect": {
                    "qs": {
                      "mode": "chose"
                    },
                    "method": {
                      "mode": "chose",
                      "label": "GET"
                    },
                    "headers": {
                      "mode": "chose"
                    },
                    "bodyType": {
                      "label": "Empty"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "handleErrors",
                    "type": "boolean",
                    "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                    "required": true
                  },
                  {
                    "name": "useNewZLibDeCompress",
                    "type": "hidden"
                  }
                ],
                "expect": [
                  {
                    "name": "url",
                    "type": "url",
                    "label": "URL",
                    "required": true
                  },
                  {
                    "name": "serializeUrl",
                    "type": "boolean",
                    "label": "Serialize URL",
                    "required": true
                  },
                  {
                    "name": "method",
                    "type": "select",
                    "label": "Method",
                    "required": true,
                    "validate": {
                      "enum": [
                        "get",
                        "head",
                        "post",
                        "put",
                        "patch",
                        "delete",
                        "options"
                      ]
                    }
                  },
                  {
                    "name": "headers",
                    "spec": [
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name",
                        "required": true
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value"
                      }
                    ],
                    "type": "array",
                    "label": "Headers"
                  },
                  {
                    "name": "qs",
                    "spec": [
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name",
                        "required": true
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value"
                      }
                    ],
                    "type": "array",
                    "label": "Query String"
                  },
                  {
                    "name": "bodyType",
                    "type": "select",
                    "label": "Body type",
                    "validate": {
                      "enum": [
                        "raw",
                        "x_www_form_urlencoded",
                        "multipart_form_data"
                      ]
                    }
                  },
                  {
                    "name": "parseResponse",
                    "type": "boolean",
                    "label": "Parse response",
                    "required": true
                  },
                  {
                    "name": "authUser",
                    "type": "text",
                    "label": "User name"
                  },
                  {
                    "name": "authPass",
                    "type": "password",
                    "label": "Password"
                  },
                  {
                    "name": "timeout",
                    "type": "uinteger",
                    "label": "Timeout",
                    "validate": {
                      "max": 300,
                      "min": 1
                    }
                  },
                  {
                    "name": "shareCookies",
                    "type": "boolean",
                    "label": "Share cookies with other HTTP modules",
                    "required": true
                  },
                  {
                    "name": "ca",
                    "type": "cert",
                    "label": "Self-signed certificate"
                  },
                  {
                    "name": "rejectUnauthorized",
                    "type": "boolean",
                    "label": "Reject connections that are using unverified (self-signed) certificates",
                    "required": true
                  },
                  {
                    "name": "followRedirect",
                    "type": "boolean",
                    "label": "Follow redirect",
                    "required": true
                  },
                  {
                    "name": "useQuerystring",
                    "type": "boolean",
                    "label": "Disable serialization of multiple same query string keys as arrays",
                    "required": true
                  },
                  {
                    "name": "gzip",
                    "type": "boolean",
                    "label": "Request compressed content",
                    "required": true
                  },
                  {
                    "name": "useMtls",
                    "type": "boolean",
                    "label": "Use Mutual TLS",
                    "required": true
                  },
                  {
                    "name": "followAllRedirects",
                    "type": "boolean",
                    "label": "Follow all redirect",
                    "required": true
                  }
                ]
              },
              "onerror": [
                {
                  "id": 14,
                  "module": "gateway:WebhookRespond",
                  "version": 1,
                  "parameters": {},
                  "mapper": {
                    "body": "{{9.error.message}}",
                    "status": "{{9.error.type}}",
                    "headers": []
                  },
                  "metadata": {
                    "designer": {
                      "x": 900,
                      "y": 300
                    },
                    "restore": {
                      "expect": {
                        "headers": {
                          "mode": "chose"
                        }
                      }
                    },
                    "expect": [
                      {
                        "name": "status",
                        "type": "uinteger",
                        "label": "Status",
                        "required": true,
                        "validate": {
                          "min": 100
                        }
                      },
                      {
                        "name": "body",
                        "type": "any",
                        "label": "Body"
                      },
                      {
                        "name": "headers",
                        "spec": [
                          {
                            "name": "key",
                            "type": "text",
                            "label": "Key",
                            "required": true,
                            "validate": {
                              "max": 256
                            }
                          },
                          {
                            "name": "value",
                            "type": "text",
                            "label": "Value",
                            "required": true,
                            "validate": {
                              "max": 4096
                            }
                          }
                        ],
                        "type": "array",
                        "label": "Custom headers",
                        "validate": {
                          "maxItems": 16
                        }
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 11,
              "module": "builtin:BasicFeeder",
              "version": 1,
              "parameters": {},
              "mapper": {
                "array": "{{9.data}}"
              },
              "metadata": {
                "designer": {
                  "x": 900,
                  "y": 0
                },
                "restore": {
                  "expect": {
                    "array": {
                      "mode": "edit",
                      "items": [
                        null
                      ]
                    }
                  }
                },
                "expect": [
                  {
                    "mode": "edit",
                    "name": "array",
                    "spec": [],
                    "type": "array",
                    "label": "Array"
                  }
                ]
              }
            },
            {
              "id": 27,
              "module": "json:CreateJSON",
              "version": 1,
              "parameters": {
                "type": 49005,
                "space": ""
              },
              "mapper": {
                "answer": "{{11.population}}"
              },
              "metadata": {
                "designer": {
                  "x": 1200,
                  "y": 0
                },
                "restore": {
                  "parameters": {
                    "type": {
                      "label": "answer"
                    },
                    "space": {
                      "label": "Empty"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "type",
                    "type": "udt",
                    "label": "Data structure",
                    "required": true
                  },
                  {
                    "name": "space",
                    "type": "select",
                    "label": "Indentation",
                    "validate": {
                      "enum": [
                        "tab",
                        "2",
                        "4"
                      ]
                    }
                  }
                ],
                "expect": [
                  {
                    "name": "answer",
                    "type": "text",
                    "label": null,
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 10,
              "module": "gateway:WebhookRespond",
              "version": 1,
              "parameters": {},
              "mapper": {
                "status": "200",
                "body": "{{27.json}}",
                "headers": []
              },
              "metadata": {
                "designer": {
                  "x": 1500,
                  "y": 0
                },
                "restore": {
                  "expect": {
                    "headers": {
                      "mode": "chose"
                    }
                  }
                },
                "expect": [
                  {
                    "name": "status",
                    "type": "uinteger",
                    "label": "Status",
                    "validate": {
                      "min": 100
                    },
                    "required": true
                  },
                  {
                    "name": "body",
                    "type": "any",
                    "label": "Body"
                  },
                  {
                    "name": "headers",
                    "type": "array",
                    "label": "Custom headers",
                    "validate": {
                      "maxItems": 16
                    },
                    "spec": [
                      {
                        "name": "key",
                        "label": "Key",
                        "type": "text",
                        "required": true,
                        "validate": {
                          "max": 256
                        }
                      },
                      {
                        "name": "value",
                        "label": "Value",
                        "type": "text",
                        "required": true,
                        "validate": {
                          "max": 4096
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "flow": [
            {
              "id": 15,
              "module": "http:ActionSendData",
              "version": 3,
              "parameters": {
                "handleErrors": false,
                "useNewZLibDeCompress": true
              },
              "filter": {
                "name": "getExchangeRate",
                "conditions": [
                  [
                    {
                      "a": "{{1.name}}",
                      "b": "getExchangeRate",
                      "o": "text:equal"
                    }
                  ]
                ]
              },
              "mapper": {
                "ca": "",
                "qs": [],
                "url": "http://api.nbp.pl/api/exchangerates/rates/A/{{1.arguments.argument}}/",
                "gzip": true,
                "method": "get",
                "headers": [],
                "timeout": "",
                "useMtls": false,
                "authPass": "",
                "authUser": "",
                "bodyType": "",
                "serializeUrl": false,
                "shareCookies": false,
                "parseResponse": true,
                "followRedirect": true,
                "useQuerystring": false,
                "followAllRedirects": false,
                "rejectUnauthorized": true
              },
              "metadata": {
                "designer": {
                  "x": 600,
                  "y": 750
                },
                "restore": {
                  "expect": {
                    "qs": {
                      "mode": "chose"
                    },
                    "method": {
                      "mode": "chose",
                      "label": "GET"
                    },
                    "headers": {
                      "mode": "chose"
                    },
                    "bodyType": {
                      "label": "Empty"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "handleErrors",
                    "type": "boolean",
                    "label": "Evaluate all states as errors (except for 2xx and 3xx )",
                    "required": true
                  },
                  {
                    "name": "useNewZLibDeCompress",
                    "type": "hidden"
                  }
                ],
                "expect": [
                  {
                    "name": "url",
                    "type": "url",
                    "label": "URL",
                    "required": true
                  },
                  {
                    "name": "serializeUrl",
                    "type": "boolean",
                    "label": "Serialize URL",
                    "required": true
                  },
                  {
                    "name": "method",
                    "type": "select",
                    "label": "Method",
                    "required": true,
                    "validate": {
                      "enum": [
                        "get",
                        "head",
                        "post",
                        "put",
                        "patch",
                        "delete",
                        "options"
                      ]
                    }
                  },
                  {
                    "name": "headers",
                    "spec": [
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name",
                        "required": true
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value"
                      }
                    ],
                    "type": "array",
                    "label": "Headers"
                  },
                  {
                    "name": "qs",
                    "spec": [
                      {
                        "name": "name",
                        "type": "text",
                        "label": "Name",
                        "required": true
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value"
                      }
                    ],
                    "type": "array",
                    "label": "Query String"
                  },
                  {
                    "name": "bodyType",
                    "type": "select",
                    "label": "Body type",
                    "validate": {
                      "enum": [
                        "raw",
                        "x_www_form_urlencoded",
                        "multipart_form_data"
                      ]
                    }
                  },
                  {
                    "name": "parseResponse",
                    "type": "boolean",
                    "label": "Parse response",
                    "required": true
                  },
                  {
                    "name": "authUser",
                    "type": "text",
                    "label": "User name"
                  },
                  {
                    "name": "authPass",
                    "type": "password",
                    "label": "Password"
                  },
                  {
                    "name": "timeout",
                    "type": "uinteger",
                    "label": "Timeout",
                    "validate": {
                      "max": 300,
                      "min": 1
                    }
                  },
                  {
                    "name": "shareCookies",
                    "type": "boolean",
                    "label": "Share cookies with other HTTP modules",
                    "required": true
                  },
                  {
                    "name": "ca",
                    "type": "cert",
                    "label": "Self-signed certificate"
                  },
                  {
                    "name": "rejectUnauthorized",
                    "type": "boolean",
                    "label": "Reject connections that are using unverified (self-signed) certificates",
                    "required": true
                  },
                  {
                    "name": "followRedirect",
                    "type": "boolean",
                    "label": "Follow redirect",
                    "required": true
                  },
                  {
                    "name": "useQuerystring",
                    "type": "boolean",
                    "label": "Disable serialization of multiple same query string keys as arrays",
                    "required": true
                  },
                  {
                    "name": "gzip",
                    "type": "boolean",
                    "label": "Request compressed content",
                    "required": true
                  },
                  {
                    "name": "useMtls",
                    "type": "boolean",
                    "label": "Use Mutual TLS",
                    "required": true
                  },
                  {
                    "name": "followAllRedirects",
                    "type": "boolean",
                    "label": "Follow all redirect",
                    "required": true
                  }
                ]
              },
              "onerror": [
                {
                  "id": 20,
                  "module": "gateway:WebhookRespond",
                  "version": 1,
                  "parameters": {},
                  "mapper": {
                    "body": "{{15.error.message}}{{15.error.detail}}",
                    "status": "{{15.error.type}}",
                    "headers": []
                  },
                  "metadata": {
                    "designer": {
                      "x": 900,
                      "y": 900
                    },
                    "restore": {
                      "expect": {
                        "headers": {
                          "mode": "chose"
                        }
                      }
                    },
                    "expect": [
                      {
                        "name": "status",
                        "type": "uinteger",
                        "label": "Status",
                        "required": true,
                        "validate": {
                          "min": 100
                        }
                      },
                      {
                        "name": "body",
                        "type": "any",
                        "label": "Body"
                      },
                      {
                        "name": "headers",
                        "spec": [
                          {
                            "name": "key",
                            "type": "text",
                            "label": "Key",
                            "required": true,
                            "validate": {
                              "max": 256
                            }
                          },
                          {
                            "name": "value",
                            "type": "text",
                            "label": "Value",
                            "required": true,
                            "validate": {
                              "max": 4096
                            }
                          }
                        ],
                        "type": "array",
                        "label": "Custom headers",
                        "validate": {
                          "maxItems": 16
                        }
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 26,
              "module": "json:CreateJSON",
              "version": 1,
              "parameters": {
                "type": 49005,
                "space": ""
              },
              "mapper": {
                "answer": "{{15.data.rates[].mid}}"
              },
              "metadata": {
                "designer": {
                  "x": 900,
                  "y": 600
                },
                "restore": {
                  "parameters": {
                    "type": {
                      "label": "answer"
                    },
                    "space": {
                      "label": "Empty"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "type",
                    "type": "udt",
                    "label": "Data structure",
                    "required": true
                  },
                  {
                    "name": "space",
                    "type": "select",
                    "label": "Indentation",
                    "validate": {
                      "enum": [
                        "tab",
                        "2",
                        "4"
                      ]
                    }
                  }
                ],
                "expect": [
                  {
                    "name": "answer",
                    "type": "text",
                    "label": null,
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 16,
              "module": "gateway:WebhookRespond",
              "version": 1,
              "parameters": {},
              "mapper": {
                "status": "200",
                "body": "{{26.json}}",
                "headers": []
              },
              "metadata": {
                "designer": {
                  "x": 1200,
                  "y": 600
                },
                "restore": {
                  "expect": {
                    "headers": {
                      "mode": "chose"
                    }
                  }
                },
                "expect": [
                  {
                    "name": "status",
                    "type": "uinteger",
                    "label": "Status",
                    "validate": {
                      "min": 100
                    },
                    "required": true
                  },
                  {
                    "name": "body",
                    "type": "any",
                    "label": "Body"
                  },
                  {
                    "name": "headers",
                    "type": "array",
                    "label": "Custom headers",
                    "validate": {
                      "maxItems": 16
                    },
                    "spec": [
                      {
                        "name": "key",
                        "label": "Key",
                        "type": "text",
                        "required": true,
                        "validate": {
                          "max": 256
                        }
                      },
                      {
                        "name": "value",
                        "label": "Value",
                        "type": "text",
                        "required": true,
                        "validate": {
                          "max": 4096
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "flow": [
            {
              "id": 18,
              "module": "openai-gpt-3:CreateCompletion",
              "version": 1,
              "parameters": {
                "__IMTCONN__": 1300827
              },
              "filter": {
                "name": "generalKnowledge",
                "conditions": [
                  [
                    {
                      "a": "{{1.name}}",
                      "b": "generalKnowledge",
                      "o": "text:equal"
                    }
                  ]
                ]
              },
              "mapper": {
                "model": "gpt-3.5-turbo",
                "top_p": "1",
                "select": "chat",
                "messages": [
                  {
                    "role": "user",
                    "content": "{{1.arguments.argument}}"
                  },
                  {
                    "role": "system",
                    "content": "Answer user question as short as possible"
                  }
                ],
                "max_tokens": "300",
                "temperature": "1",
                "n_completions": "1",
                "response_format": "text"
              },
              "metadata": {
                "designer": {
                  "x": 600,
                  "y": 1200
                },
                "restore": {
                  "expect": {
                    "stop": {
                      "mode": "chose"
                    },
                    "model": {
                      "mode": "chose",
                      "label": "gpt-3.5-turbo"
                    },
                    "select": {
                      "label": "Create a Chat Completion (GPT Models)"
                    },
                    "messages": {
                      "mode": "chose",
                      "items": [
                        {
                          "role": {
                            "mode": "chose",
                            "label": "User"
                          }
                        },
                        {
                          "role": {
                            "mode": "chose",
                            "label": "System"
                          }
                        }
                      ]
                    },
                    "logit_bias": {
                      "mode": "chose"
                    },
                    "response_format": {
                      "mode": "chose",
                      "label": "Text"
                    },
                    "additionalParameters": {
                      "mode": "chose"
                    }
                  },
                  "parameters": {
                    "__IMTCONN__": {
                      "data": {
                        "scoped": "true",
                        "connection": "openai-gpt-3"
                      },
                      "label": "My OpenAI connection"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "__IMTCONN__",
                    "type": "account:openai-gpt-3",
                    "label": "Connection",
                    "required": true
                  }
                ],
                "expect": [
                  {
                    "name": "select",
                    "type": "select",
                    "label": "Select Method",
                    "required": true,
                    "validate": {
                      "enum": [
                        "chat",
                        "prompt"
                      ]
                    }
                  },
                  {
                    "name": "max_tokens",
                    "type": "number",
                    "label": "Max Tokens"
                  },
                  {
                    "name": "temperature",
                    "type": "number",
                    "label": "Temperature",
                    "validate": {
                      "max": 2,
                      "min": 0
                    }
                  },
                  {
                    "name": "top_p",
                    "type": "number",
                    "label": "Top P",
                    "validate": {
                      "max": 1,
                      "min": 0
                    }
                  },
                  {
                    "name": "n_completions",
                    "type": "number",
                    "label": "Number"
                  },
                  {
                    "name": "frequency_penalty",
                    "type": "number",
                    "label": "Frequency Penalty",
                    "validate": {
                      "max": 2,
                      "min": -2
                    }
                  },
                  {
                    "name": "presence_penalty",
                    "type": "number",
                    "label": "Presence Penalty",
                    "validate": {
                      "max": 2,
                      "min": -2
                    }
                  },
                  {
                    "name": "logit_bias",
                    "spec": {
                      "name": "value",
                      "spec": [
                        {
                          "name": "token",
                          "type": "text",
                          "label": "Token ID",
                          "required": true
                        },
                        {
                          "name": "probability",
                          "type": "number",
                          "label": "Probability",
                          "required": true,
                          "validate": {
                            "max": 100,
                            "min": -100
                          }
                        }
                      ],
                      "type": "collection",
                      "label": "Token Probability"
                    },
                    "type": "array",
                    "label": "Token Probability"
                  },
                  {
                    "name": "response_format",
                    "type": "select",
                    "label": "Response Format",
                    "validate": {
                      "enum": [
                        "text",
                        "json_object"
                      ]
                    }
                  },
                  {
                    "name": "seed",
                    "type": "integer",
                    "label": "Seed"
                  },
                  {
                    "name": "stop",
                    "spec": {
                      "name": "value",
                      "type": "text",
                      "label": "Stop Sequence"
                    },
                    "type": "array",
                    "label": "Stop Sequences",
                    "validate": {
                      "maxItems": 4
                    }
                  },
                  {
                    "name": "additionalParameters",
                    "spec": {
                      "name": "value",
                      "spec": [
                        {
                          "name": "key",
                          "type": "text",
                          "label": "Parameter Name",
                          "required": true
                        },
                        {
                          "name": "type",
                          "type": "select",
                          "label": "Input Type",
                          "options": [
                            {
                              "label": "Text",
                              "value": "text",
                              "nested": [
                                {
                                  "name": "value",
                                  "type": "text",
                                  "label": "Parameter Value"
                                }
                              ],
                              "default": true
                            },
                            {
                              "label": "Number",
                              "value": "number",
                              "nested": [
                                {
                                  "name": "value",
                                  "type": "number",
                                  "label": "Parameter Value"
                                }
                              ]
                            },
                            {
                              "label": "Boolean",
                              "value": "boolean",
                              "nested": [
                                {
                                  "name": "value",
                                  "type": "boolean",
                                  "label": "Parameter Value"
                                }
                              ]
                            },
                            {
                              "label": "Date",
                              "value": "date",
                              "nested": [
                                {
                                  "name": "value",
                                  "type": "date",
                                  "label": "Parameter Value"
                                }
                              ]
                            },
                            {
                              "label": "Any",
                              "value": "any",
                              "nested": [
                                {
                                  "name": "value",
                                  "type": "any",
                                  "label": "Parameter Value"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "collection",
                      "label": "Input Parameter"
                    },
                    "type": "array",
                    "label": "Other Input Parameters"
                  },
                  {
                    "name": "model",
                    "type": "select",
                    "label": "Model",
                    "required": true
                  },
                  {
                    "name": "messages",
                    "spec": {
                      "name": "value",
                      "spec": [
                        {
                          "name": "role",
                          "type": "select",
                          "label": "Role",
                          "options": [
                            {
                              "label": "System",
                              "value": "system"
                            },
                            {
                              "label": "User",
                              "value": "user"
                            },
                            {
                              "label": "Assistant",
                              "value": "assistant"
                            }
                          ],
                          "required": true
                        },
                        {
                          "name": "content",
                          "type": "text",
                          "label": "Message Content"
                        }
                      ],
                      "type": "collection",
                      "label": "Message"
                    },
                    "type": "array",
                    "label": "Messages",
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 28,
              "module": "json:CreateJSON",
              "version": 1,
              "parameters": {
                "type": 49005,
                "space": ""
              },
              "mapper": {
                "answer": "{{18.choices[].message.content}}"
              },
              "metadata": {
                "designer": {
                  "x": 900,
                  "y": 1200
                },
                "restore": {
                  "parameters": {
                    "type": {
                      "label": "answer"
                    },
                    "space": {
                      "label": "Empty"
                    }
                  }
                },
                "parameters": [
                  {
                    "name": "type",
                    "type": "udt",
                    "label": "Data structure",
                    "required": true
                  },
                  {
                    "name": "space",
                    "type": "select",
                    "label": "Indentation",
                    "validate": {
                      "enum": [
                        "tab",
                        "2",
                        "4"
                      ]
                    }
                  }
                ],
                "expect": [
                  {
                    "name": "answer",
                    "type": "text",
                    "label": null,
                    "required": true
                  }
                ]
              }
            },
            {
              "id": 19,
              "module": "gateway:WebhookRespond",
              "version": 1,
              "parameters": {},
              "mapper": {
                "status": "200",
                "body": "{{28.json}}",
                "headers": []
              },
              "metadata": {
                "designer": {
                  "x": 1200,
                  "y": 1200
                },
                "restore": {
                  "expect": {
                    "headers": {
                      "mode": "chose"
                    }
                  }
                },
                "expect": [
                  {
                    "name": "status",
                    "type": "uinteger",
                    "label": "Status",
                    "validate": {
                      "min": 100
                    },
                    "required": true
                  },
                  {
                    "name": "body",
                    "type": "any",
                    "label": "Body"
                  },
                  {
                    "name": "headers",
                    "type": "array",
                    "label": "Custom headers",
                    "validate": {
                      "maxItems": 16
                    },
                    "spec": [
                      {
                        "name": "key",
                        "label": "Key",
                        "type": "text",
                        "required": true,
                        "validate": {
                          "max": 256
                        }
                      },
                      {
                        "name": "value",
                        "label": "Value",
                        "type": "text",
                        "required": true,
                        "validate": {
                          "max": 4096
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "flow": [
            {
              "id": 21,
              "module": "gateway:WebhookRespond",
              "version": 1,
              "parameters": {},
              "mapper": {
                "body": "bad function name",
                "status": "500",
                "headers": []
              },
              "metadata": {
                "designer": {
                  "x": 441,
                  "y": 1526
                },
                "restore": {
                  "expect": {
                    "headers": {
                      "mode": "chose"
                    }
                  }
                },
                "expect": [
                  {
                    "name": "status",
                    "type": "uinteger",
                    "label": "Status",
                    "required": true,
                    "validate": {
                      "min": 100
                    }
                  },
                  {
                    "name": "body",
                    "type": "any",
                    "label": "Body"
                  },
                  {
                    "name": "headers",
                    "spec": [
                      {
                        "name": "key",
                        "type": "text",
                        "label": "Key",
                        "required": true,
                        "validate": {
                          "max": 256
                        }
                      },
                      {
                        "name": "value",
                        "type": "text",
                        "label": "Value",
                        "required": true,
                        "validate": {
                          "max": 4096
                        }
                      }
                    ],
                    "type": "array",
                    "label": "Custom headers",
                    "validate": {
                      "maxItems": 16
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "metadata": {
    "instant": true,
    "version": 1,
    "scenario": {
      "roundtrips": 1,
      "maxErrors": 3,
      "autoCommit": true,
      "autoCommitTriggerLast": true,
      "sequential": false,
      "slots": null,
      "confidential": false,
      "dataloss": false,
      "dlq": false,
      "freshVariables": false
    },
    "designer": {
      "orphans": []
    },
    "zone": "eu2.make.com"
  }
}
